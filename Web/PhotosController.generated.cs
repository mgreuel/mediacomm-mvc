// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace MediaCommMvc.Web.Controllers
{
    public partial class PhotosController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected PhotosController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Album()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Album);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AlbumCover()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AlbumCover);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ViewPhoto()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ViewPhoto);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public PhotosController Actions { get { return MVC.Photos; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Photos";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Photos";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Album = "Album";
            public readonly string AlbumCover = "AlbumCover";
            public readonly string Index = "Index";
            public readonly string Upload = "Upload";
            public readonly string ViewPhoto = "ViewPhoto";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Album = "Album";
            public const string AlbumCover = "AlbumCover";
            public const string Index = "Index";
            public const string Upload = "Upload";
            public const string ViewPhoto = "ViewPhoto";
        }


        static readonly ActionParamsClass_Album s_params_Album = new ActionParamsClass_Album();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Album AlbumParams { get { return s_params_Album; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Album
        {
            public readonly string album = "album";
        }
        static readonly ActionParamsClass_AlbumCover s_params_AlbumCover = new ActionParamsClass_AlbumCover();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AlbumCover AlbumCoverParams { get { return s_params_AlbumCover; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AlbumCover
        {
            public readonly string albumName = "albumName";
        }
        static readonly ActionParamsClass_ViewPhoto s_params_ViewPhoto = new ActionParamsClass_ViewPhoto();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ViewPhoto ViewPhotoParams { get { return s_params_ViewPhoto; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ViewPhoto
        {
            public readonly string album = "album";
            public readonly string filename = "filename";
            public readonly string size = "size";
        }
        static readonly ActionParamsClass_Upload s_params_Upload = new ActionParamsClass_Upload();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Upload UploadParams { get { return s_params_Upload; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Upload
        {
            public readonly string albumTitle = "albumTitle";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Index = "Index";
                public readonly string Upload = "Upload";
            }
            public readonly string Index = "~/Views/Photos/Index.cshtml";
            public readonly string Upload = "~/Views/Photos/Upload.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_PhotosController : MediaCommMvc.Web.Controllers.PhotosController
    {
        public T4MVC_PhotosController() : base(Dummy.Instance) { }

        [NonAction]
        partial void AlbumOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string album);

        [NonAction]
        public override System.Web.Mvc.ActionResult Album(string album)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Album);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "album", album);
            AlbumOverride(callInfo, album);
            return callInfo;
        }

        [NonAction]
        partial void AlbumCoverOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string albumName);

        [NonAction]
        public override System.Web.Mvc.ActionResult AlbumCover(string albumName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AlbumCover);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "albumName", albumName);
            AlbumCoverOverride(callInfo, albumName);
            return callInfo;
        }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void UploadOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Upload()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Upload);
            UploadOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ViewPhotoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string album, string filename, string size);

        [NonAction]
        public override System.Web.Mvc.ActionResult ViewPhoto(string albumName, string filename, string size)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ViewPhoto);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "album", albumName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "filename", filename);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "size", size);
            ViewPhotoOverride(callInfo, albumName, filename, size);
            return callInfo;
        }

        [NonAction]
        partial void UploadOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string albumTitle);

        [NonAction]
        public override System.Web.Mvc.ActionResult Upload(string albumTitle)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Upload);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "albumTitle", albumTitle);
            UploadOverride(callInfo, albumTitle);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
