@using MediaCommMvc.Web.Models.Forum.Models
@model MediaCommMvc.Web.ViewModels.Forum.EditTopicWebViewModel

@using (Html.BeginForm(MVC.Forum.EditTopic(), FormMethod.Post, new { role = "form", @class = "edit-topic" }))
{
    <div class="panel panel-default">
        <div class="panel-heading">
            @Resources.Forums.Topic
        </div>
        <div class="panel-body">
            <div class="form-group">
                @Html.LabelFor(m => m.Subject)

                @Html.TextBoxFor(m => m.Subject, new { @class = "form-control full-width" })

                @Html.ValidationMessageFor(m => m.Subject)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Text)

                @Html.TextAreaFor(m => m.Text, new { contenteditable = "true", @class = "editor form-control full-width" })

                @Html.ValidationMessageFor(m => m.Text)

            </div>

        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading">
            <a data-toggle="collapse" data-target="#hide-from-users"
               href="#hide-from-users">
                @Html.DisplayNameFor(m => m.ExcludedUserNames)
            </a>
        </div>
        <div id="hide-from-users" class="panel-collapse collapse">
            <div class="form-group panel-body">
                @Html.ListBoxFor(m => m.ExcludedUserNames, this.Model.AllUserNames, new { multiple = "multiple" })
            </div>
        </div>
    </div>


    <div class="panel panel-default">
        <div class="panel-heading">
            <a data-toggle="collapse" data-target="#poll"
               href="#poll">@Resources.Forums.Poll</a>
        </div>
        <div id="poll" class="panel-collapse collapse">
            <div class="form-group panel-body">

                <div class="form-group">
                    @Html.LabelFor(m => m.Poll.PollType)
                    @Html.EnumDropDownListFor(m => m.Poll.PollType, new { @class = "form-control" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Poll.Question)
                    @Html.TextBoxFor(m => m.Poll.Question, new { @class = "form-control full-width" })

                </div>

                <div class="form-group poll-answers">
                    @Html.LabelFor(m => m.Poll.Answers)
                    @for (int i = 0; i < this.Model.Poll.Answers.Count; i++)
                    {
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.Poll.Answers[i], new { @class = "form-control full-width" })
                        </div>
                    }

                </div>

                <button id="add-answer" type="button">@Resources.Forums.AddAnswer</button>
            </div>
        </div>
    </div>

    <button type="submit" class="btn btn-primary">@Resources.Forums.SaveTopic</button>
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script>

        $(function () {
            $('#Text').wysihtml5({
                toolbar: {
                    "font-styles": false, //Font styling, e.g. h1, h2, etc. Default true
                    "emphasis": true, //Italics, bold, etc. Default true
                    "lists": true, //(Un)ordered lists, e.g. Bullets, Numbers. Default true
                    "html": false, //Button which allows you to edit the generated HTML. Default false
                    "link": true, //Button to insert a link. Default true
                    "image": true, //Button to insert an image. Default true,
                    "color": false, //Button to change color of font
                    "blockquote": true, //Blockquote
                    "size": "sm" //default: none, other options are xs, sm, lg
                }
            });

            $("#ExcludedUserNames").multiselect({
                buttonText: function (options, select) {
                    if (options.length === 0) {
                        return '@Resources.General.NoneSelected';
                    } else if (options.length == $('option', $(select)).length) {
                        return '@Resources.General.AllSelected';
                    } else if (options.length > 5) {
                        return options.length + ' @Resources.General.Selected';
                    } else {
                        var selected = '';
                        options.each(function () {
                            var label = ($(this).attr('label') !== undefined) ? $(this).attr('label') : $(this).html();

                            selected += label + ', ';
                        });

                        return selected.substr(0, selected.length - 2);
                    }
                }
            });

            $("#add-answer").click(function () {
                var $template = $('.poll-answers div:first').clone();
                var $input = $template.find('input');

                var numberOfQuestions = $('.poll-answers input').length;

                var name = $input.prop('name').replace(/0/, numberOfQuestions);
                $input.prop('name', name);

                var id = $input.prop('id').replace(/0/, numberOfQuestions);
                $input.prop('id', id);

                $input.val('');

                $('.poll-answers').append($template);
            });
        });
    </script>
}
