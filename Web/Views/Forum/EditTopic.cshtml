@using System.Globalization
@model MediaCommMvc.Web.Features.Forum.ViewModels.EditTopicViewModel

@{
    ViewBag.Title = string.IsNullOrWhiteSpace(Model.Id)? Resources.Forums.CreateTopic : Resources.Forums.EditTopic;
    
}

@using (Html.BeginForm(MVC.Forum.EditTopic(), FormMethod.Post, new { role = "form", @class = "edit-topic" }))
{
    <div class="panel panel-default">
        <div class="panel-heading">
            @Resources.Forums.Topic
        </div>
        <div class="panel-body">
            <div class="form-group">
                @Html.LabelFor(m => m.Title)

                @Html.TextBoxFor(m => m.Title, new { @class = "form-control full-width" })

                @Html.ValidationMessageFor(m => m.Title)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Text)

                @Html.TextAreaFor(m => m.Text, new { contenteditable = "true", @class = "editor form-control full-width" })

                @Html.ValidationMessageFor(m => m.Text)

            </div>

            <div class="checkbox">
                <label>
                    @Html.CheckBoxFor(m => m.IsSticky)
                    @Html.DisplayNameFor(m => m.IsSticky)
                </label>
            </div>

            <div class="checkbox">
                <label>
                    @Html.CheckBoxFor(m => m.IsWiki)
                    @Html.DisplayNameFor(m => m.IsWiki)
                </label>
            </div>

        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading" data-toggle="collapse" data-target="#hide-from-users">
            <span class="glyphicon glyphicon-collapse-down toggle-icon"></span>
            @Html.DisplayNameFor(m => m.ExcludedUserNames)
        </div>
        <div id="hide-from-users" class="panel-collapse collapse">
            <div class="form-group panel-body">
                @Html.ListBoxFor(m => m.ExcludedUserNames, this.Model.AllUserNames, new { multiple = "multiple" })
            </div>
        </div>
    </div>

         <div class="panel panel-default">
             <div class="panel-heading" data-toggle="collapse" data-target="#poll">
                 <span class="glyphicon glyphicon-collapse-down toggle-icon"></span>
                 @Resources.Forums.Poll
             </div>


             <div id="poll" class="panel-collapse collapse">
                 <div class="form-group panel-body">

                     <div class="form-group">
                         @Html.LabelFor(m => m.Poll.Question)
                         @Html.TextBoxFor(m => m.Poll.Question, new { @class = "form-control full-width" })

                     </div>

                     <div class="form-group poll-answers">
                         @Html.LabelFor(m => m.Poll.Answers)
                         @for (int i = 0; i < this.Model.Poll.Answers.Count; i++)
                         {
                             <div class="form-group">
                                 @Html.HiddenFor(m => m.Poll.Answers[i].Id)
                                 @Html.TextBoxFor(m => m.Poll.Answers[i].Text, new { @class = "form-control full-width" })
                             </div>
                         }

                     </div>

                     <button id="add-answer" class="btn btn-default btn-sm" type="button">@Resources.Forums.AddAnswer</button>
                 </div>
             </div>
         </div>

    <button type="submit" class="btn btn-primary">@Resources.Forums.SaveTopic</button>
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script>

        $(function() {
            $('#Text').wysihtml5({
                toolbar: {
                    "font-styles": false, //Font styling, e.g. h1, h2, etc. Default true
                    "emphasis": true, //Italics, bold, etc. Default true
                    "lists": true, //(Un)ordered lists, e.g. Bullets, Numbers. Default true
                    "html": false, //Button which allows you to edit the generated HTML. Default false
                    "link": true, //Button to insert a link. Default true
                    "image": true, //Button to insert an image. Default true,
                    "color": false, //Button to change color of font
                    "blockquote": true, //Blockquote
                    "size": "sm" //default: none, other options are xs, sm, lg
                }

                @if (CultureInfo.CurrentUICulture.Name == "de-DE")
                {
                    <text>,locale: "de-DE"</text>
                }
                
        });

        $("#ExcludedUserNames").multiselect({
            buttonText: function(options, select) {
                if (options.length === 0) {
                    return '@Html.Raw(Resources.General.NoneSelected)';
                } else if (options.length == $('option', $(select)).length) {
                    return '@Html.Raw(Resources.General.AllSelected)';
                } else if (options.length > 5) {
                    return options.length + ' @Html.Raw(Resources.General.Selected)';
                } else {
                    var selected = '';
                    options.each(function() {
                        var label = ($(this).attr('label') !== undefined) ? $(this).attr('label') : $(this).html();

                        selected += label + ', ';
                    });

                    return selected.substr(0, selected.length - 2);
                }
            }
        });


        $("#add-answer").click(function() {
            var $template = $('.poll-answers div:first').clone();

            var numberOfQuestions = $('.poll-answers input[type=text]').length;

            var $textInput = $template.find('input[type=text]');
            $textInput.prop('name', $textInput.prop('name').replace(/0/, numberOfQuestions));
            $textInput.prop('id', $textInput.prop('id').replace(/0/, numberOfQuestions));
            $textInput.prop('value', '');

            var $IdInput = $template.find('input[type=hidden]');
            $IdInput.prop('name', $IdInput.prop('name').replace(/0/, numberOfQuestions));
            $IdInput.prop('id', $IdInput.prop('id').replace(/0/, numberOfQuestions));
            $IdInput.val(guid());

            $('.poll-answers').append($template);
        });
        });

        function guid() {
            function s4() {
                return Math.floor((1 + Math.random()) * 0x10000)
                  .toString(16)
                  .substring(1);
            }
            return s4() + s4() + '-' + s4() + '-' + s4() + '-' +
              s4() + '-' + s4() + s4() + s4();
        }

        $('.panel-heading[data-toggle="collapse"]').click(function (e) {

            var $icon = $(this).find('.toggle-icon');

            if ($icon.hasClass('glyphicon-collapse-down')) {
                $icon.removeClass('glyphicon-collapse-down');
                $icon.addClass('glyphicon-collapse-up');
            }
            else {
                $icon.removeClass('glyphicon-collapse-up');
                $icon.addClass('glyphicon-collapse-down');
            }
        });
</script>
}
