@using System.Globalization
@using MediaCommMvc.Web.Features.Forum.ViewModels
@using Microsoft.AspNet.Identity
@using PagedList.Mvc
@model TopicDetailsViewModel

@{

    ViewBag.Title = Model.Title;

    PagedListRenderOptions pagerRenderOptions = new PagedListRenderOptions
    {
        DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
        DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
        Display = PagedListDisplayMode.IfNeeded,
        DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
        DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
        //LinkToFirstPageFormat = Resources.General.First,
        //LinkToPreviousPageFormat = Resources.General.Previous,
        //LinkToNextPageFormat = Resources.General.Next,
        //LinkToLastPageFormat = Resources.General.Last,
        LinkToFirstPageFormat = "<i class='glyphicon glyphicon-fast-backward'></i>",
        LinkToPreviousPageFormat = "<i class='glyphicon glyphicon-backward'></i>",
        LinkToNextPageFormat = "<i class='glyphicon glyphicon-forward'></i>",
        LinkToLastPageFormat = "<i class='glyphicon glyphicon-fast-forward'></i>",
        MaximumPageNumbersToDisplay = 5,
        UlElementClasses = new List<string> { "pagination", "pagination-sm" },
        DisplayEllipsesWhenNotShowingAllPageNumbers = true
    };
}

<div class="clearfix topic-header">
    <div class="pull-left">
        <h3 id="topic-title">@Model.Title</h3>
        @if (Model.ExcludedUsernames != null && Model.ExcludedUsernames.Any())
        {
            <div id="topic-hidden-for">@Resources.Forums.InvisibleFor @string.Join(", ", Model.ExcludedUsernames)</div>
        }
    </div>
    <div class="pull-right">
        @Html.PagedListPager(this.Model.PostsForCurrentpage, pageNumber => Url.Action(MVC.Forum.Topic().AddRouteValue("topicPage", pageNumber)), pagerRenderOptions)
    </div>
</div>

@if (Model.Poll != null)
{
    <div id="poll-panel" class="panel panel-default">

        <div class="panel-heading" data-toggle="collapse" data-target="#poll">
            <span class="glyphicon glyphicon-collapse-up toggle-icon"></span>
            @Resources.Forums.Poll: @Model.Poll.Question
        </div>
        <div id="poll" class="panel-body panel-collapse collapse in">


            @using (Html.BeginForm(MVC.Forum.AnswerPoll()))
            {
                <input type="hidden" name="TopicId" value="@Model.Id" />
                <table class="table table-condensed table-bordered">
                    <thead>
                        <tr>
                            <th class="text-primary">
                                @Resources.Users.UserName
                            </th>

                            @foreach (var answerText in Model.Poll.AnswerTexts)
                            {
                                <th class="text-center">@answerText</th>
                            }
                        </tr>
                    </thead>

                    <tbody>

                        @foreach (var userAnswers in Model.Poll.UserAnswers)
                    {
                            <tr>
                                <td>
                                    @userAnswers.Username

                                    @if (userAnswers.Username.Equals(User.Identity.Name))
                                    {
                                        <input name="Username" type="hidden" value="@userAnswers.Username" />
                                    }
                                </td>


                                @foreach (var userAnswer in userAnswers.Answers)
                                {
                                    if (userAnswer.Checked)
                                    {
                                        @:<td class="success text-center">
                                            <i class="glyphicon glyphicon-ok-circle"></i>
                                }
                                    else
                                    {
                                        @:<td class="danger text-center">
                                        <i class="glyphicon glyphicon-remove-circle"></i>
                                }

                                    if (userAnswers.Username.Equals(User.Identity.Name))
                                    {
                                        @* checkbox value are not sent if they are not checked see http://stackoverflow.com/questions/1809494/post-the-checkboxes-that-are-unchecked*@

                                        <input class="answer-checkbox" type="checkbox" value="@userAnswer.AnswerId" @(userAnswer.Checked ? "checked" : "") name="CheckedAnswers" />
                                    }

                                    @:</td>

                                }
                            </tr>
                                    }
                    </tbody>

                    <tfoot>
                        <tr>
                            <td></td>
                            @foreach (int answerCount in Model.Poll.AnswerCountByQuestion)
                            {
                                <td class="text-center">
                                    @if (answerCount == Model.Poll.AnswerCountByQuestion.Max())
                                    {
                                        <strong>@answerCount</strong>
                                    }
                                    else
                                    {
                                        @answerCount
                                    }
                                </td>
                            }
                        </tr>
                    </tfoot>
                </table>
                <input class="btn btn-primary btn-sm" type="submit" value="@Resources.General.Save" />

                <p id="poll-success" class="text-success hidden">@Resources.General.ChangesSaved</p>
                <p id="poll-success1" class="text-success hidden">@Resources.General.ChangesSaved</p>
                <p id="poll-error" class="text-danger hidden">@Resources.General.ErrorMessage</p>
                                    }

        </div>
    </div>
}

<div class="panel panel-default">
    <table id="topic-posts" class="table table-striped table-bordered">
        <tbody>
            @{ bool firstPost = true; }

            @foreach (PostViewModel post in Model.PostsForCurrentpage)
            {
                <tr class="post-row" id="@post.IndexInTopic">
                    <td>
                        <div class="post">
                            <div class="post-header clearfix">
                                <div class="pull-left">
                                    <strong class="text-primary">  @post.AuthorName</strong>
                                </div>
                                <div class="pull-right">
                                    @post.CreatedAt
                                                    </div>
                                                </div>
                                                <div>
                                                    @Html.Raw(@post.Text)
                                                </div>
                                                <div class="post-actions clearfix">

                                                    <div class="approvals">
                                                        @foreach (string approval in post.Approvals)
                                                        {
                                                            <div class='pull-left label label-info'>@approval @Resources.Approval.ApprovalText</div>
                                                        }
                                                    </div>

                                                    @if (post.IsEditable(User))
                                                    {
                                                        if (firstPost)
                                                        {
                                                            <div class="pull-right">
                                                                @Html.ActionLink(Resources.Forums.Edit, MVC.Forum.EditTopic().AddRouteValue("id", Model.Id), new { @class = "btn btn-xs btn-default" })
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            <div class="pull-right">
                                                                @Html.ActionLink(Resources.Forums.Edit, MVC.Forum.EditPost().AddRouteValues(new { topicId = Model.Id, postIndex = post.IndexInTopic }), new { @class = "btn btn-xs btn-default" })
                                                            </div>
                                                        }
                                                    }

                                                    @if (post.ShowApprovalButton(User))
                                                    {
                                                        <div class="approval-button-container pull-right">
                                                            <a class="approval-button btn btn-primary btn-xs" data-topic-id="@Model.Id" data-post-index="@post.IndexInTopic" data-url="@Url.Action(MVC.Forum.AddApproval())">@Resources.Approval.IApprove</a>
                                                        </div>
                                                    }

                                                    @{ firstPost = false; }
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
            }
        </tbody>
    </table>
</div>
<div class="clearfix">
    <div class="pull-right">
        @Html.PagedListPager(Model.PostsForCurrentpage, pageNumber => Url.Action(MVC.Forum.Topic().AddRouteValue("topicPage", pageNumber)), pagerRenderOptions)
    </div>
</div>

@if (Model.PostsForCurrentpage.IsLastPage)
{
    Html.RenderPartial(MVC.Forum.Views.Reply, new ReplyViewModel { TopicId = Model.Id });
}

                    @* sections are not supported in partials, so the js must be included here*@

                    @section scripts
                        {
                        @if (Model.PostsForCurrentpage.IsLastPage)
                        {
                            @Scripts.Render("~/bundles/jqueryval")

                            <script>

                                $(function () {
                                    var editor = $('#reply-input').wysihtml5({
                                        toolbar: {
                                            "font-styles": false, //Font styling, e.g. h1, h2, etc. Default true
                                            "emphasis": true, //Italics, bold, etc. Default true
                                            "lists": true, //(Un)ordered lists, e.g. Bullets, Numbers. Default true
                                            "html": false, //Button which allows you to edit the generated HTML. Default false
                                            "link": true, //Button to insert a link. Default true
                                            "image": true, //Button to insert an image. Default true,
                                            "color": false, //Button to change color of font
                                            "blockquote": true, //Blockquote

                                            "size": "sm" //default: none, other options are xs, sm, lg
                                        }

                                        

                                        @if (CultureInfo.CurrentUICulture.Name == "de-DE")
                                        {
                                            <text>,locale: "de-DE"</text>
                                        }

                                    });

                                    var $replyForm = $('#reply > form');

                                    $replyForm.submit(function (e) {

                                        if (/\S/.test(editor.html())) {

                                            // string is not empty and not just whitespace
                                            $('#reply #Text').val(editor.html());
                                        }
                                        else {

                                            e.preventDefault();
                                        }
                                    });

                                    $.post("@Url.Action(MVC.Forum.MarkTopicAsRead())", { id: "@Model.Id" });
                                });

                            </script>
                        }

                        <script>

                            $(function () {

                                $(".approval-button").click(function () {
                                    var $postLink = $(this);
                                    var url = $postLink.data("url");
                                    var topicId = $postLink.data("topic-id");
                                    var postIndex = $postLink.data("post-index");

                                    $.post(url, { topicId: topicId, postIndex: postIndex })
                                        .done(function (data) {

                                            $postLink.parents(".post").find(".approval-button-container").hide();
                                            $postLink.parents(".post").find(".approvals").append("<div class='pull-left label label-info'>@User.Identity.GetUserName() @Resources.Approval.ApprovalText</div>");
                                        });
                                });

                                $('.panel-heading[data-toggle="collapse"]').click(function (e) {

                                    var $icon = $(this).find('.toggle-icon');

                                    if ($icon.hasClass('glyphicon-collapse-down')) {
                                        $icon.removeClass('glyphicon-collapse-down');
                                        $icon.addClass('glyphicon-collapse-up');
                                    }
                                    else {
                                        $icon.removeClass('glyphicon-collapse-up');
                                        $icon.addClass('glyphicon-collapse-down');
                                    }
                                });
                            });


                        </script>
                    }

