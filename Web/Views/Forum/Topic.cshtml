@using MediaCommMvc.Web.Forum.ViewModels
@using Microsoft.AspNet.Identity
@using PagedList.Mvc
@model TopicDetailsViewModel

@{
    PagedListRenderOptions pagerRenderOptions = new PagedListRenderOptions
    {
        DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
        DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
        Display = PagedListDisplayMode.IfNeeded,
        DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
        DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
        LinkToFirstPageFormat = Resources.General.First,
        LinkToPreviousPageFormat = Resources.General.Previous,
        LinkToNextPageFormat = Resources.General.Next,
        LinkToLastPageFormat = Resources.General.Last,
        MaximumPageNumbersToDisplay = 10,
        UlElementClasses = new List<string> { "pagination", "pagination-sm" },
        DisplayEllipsesWhenNotShowingAllPageNumbers = true
    };
}



<div class="clearfix">
    <div class="pull-left">
        <h3 id="topic-title">@Model.Title</h3>
    </div>
    <div class="pull-right">
        @Html.PagedListPager(this.Model.PostsForCurrentpage, pageNumber => Url.Action(MVC.Forum.Topic().AddRouteValue("page", pageNumber)), pagerRenderOptions)
    </div>
</div>

@if (Model.Poll != null)
{
    <div id="poll" class="panel panel-default">

        <div class="panel-heading">
            @Model.Poll.Question
        </div>
        <div class="panel-body">


            @using (Html.BeginForm(MVC.Forum.AnswerPoll()))
            {
                <input type="hidden" name="TopicId" value="@Model.Id"/>
                <table class="table table-condensed">
                    <thead>
                    <tr>
                        <th>
                            @Resources.Users.UserName
                        </th>

                        @foreach (var answerText in Model.Poll.AnswerTexts)
                        {
                            <th class="text-center">@answerText</th>
                        }
                    </tr>
                    </thead>

                    <tbody>

                    @foreach (var userAnswers in Model.Poll.UserAnswers)
                    {
                        <tr>
                            <th>
                                @userAnswers.Username

                                @if (userAnswers.Username.Equals(User.Identity.Name))
                                {
                                    <input name="Username" type="hidden" value="@userAnswers.Username"/>
                                }
                            </th>

                            @{ int counter = 0; }

                            @foreach (var userAnswer in userAnswers.Answers)
                            {
                                if (userAnswer)
                                {
                                    @:<td class="success text-center">
                                }
                                else
                                {
                                    @:<td class="danger text-center">
                                }

                                if (userAnswers.Username.Equals(User.Identity.Name))
                                {
                                    @* checkbox value are not sent if they are not checked see http://stackoverflow.com/questions/1809494/post-the-checkboxes-that-are-unchecked*@

                                    <input class="answer-checkbox" type="checkbox" value="@counter" name="CheckedAnswers"/>

                                }

                                @:</td>

                                counter = counter + 1;
                            }
                        </tr>


                        @:</tbody>
                    }
                </table>
                <input class="btn btn-primary btn-sm" type="submit" value="@Resources.General.Save"/>

                <p id="poll-success" class="text-success hidden">@Resources.General.ChangesSaved</p>
                <p id="poll-success1" class="text-success hidden">@Resources.General.ChangesSaved</p>
                <p id="poll-error" class="text-danger hidden">@Resources.General.ErrorMessage</p>
            }

        </div>
    </div>
                    }

                    <div class="panel panel-default">
                        <table id="topic-posts" class="table table-striped table-bordered">
                            <tbody>
                                @{ bool firstPost = true; }

                                @foreach (PostViewModel post in Model.PostsForCurrentpage)
                                {
                                    <tr>
                                        <td>
                                            <div class="post">
                                                <div class="post-header clearfix">
                                                    <div class="pull-left">
                                                        <strong>  @post.AuthorName</strong>
                                                    </div>
                                                    <div class="pull-right">
                                                        @post.Created
                                                    </div>
                                                </div>
                                                <div>
                                                    @Html.Raw(@post.Text)
                                                </div>
                                                <div class="post-actions clearfix">

                                                    <div class="approvals">
                                                        @foreach (string approval in post.Approvals)
                                                        {
                                                            <div class='pull-left label label-info'>@approval @Resources.Approval.ApprovalText</div>
                                                        }
                                                    </div>

                                                    @if (post.IsEditable(User))
                                                    {
                                                        if (firstPost)
                                                        {
                                                            firstPost = false;

                                                            <div class="pull-right">
                                                                @Html.ActionLink(Resources.Forums.Edit, MVC.Forum.EditTopic().AddRouteValue("id", Model.Id), new { @class = "btn btn-xs btn-warning" })
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            <div class="pull-right">
                                                                @Html.ActionLink(Resources.Forums.Edit, MVC.Forum.EditPost().AddRouteValues(new { topicId = Model.Id, postIndex = post.IndexInTopic }), new { @class = "btn btn-xs btn-warning" })
                                                            </div>
                                                        }
                                                    }

                                                    @if (post.ShowApprovalButton(User))
                                                    {
                                                        <div class="approval-button-container pull-right">
                                                            <a class="approval-button btn btn-primary btn-xs" data-topic-id="@Model.Id" data-post-index="@post.IndexInTopic" data-url="@Url.Action(MVC.Forum.AddApproval())">@Resources.Approval.IApprove</a>
                                                        </div>
                                                    }
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="clearfix">
                        <div class="pull-right">
                            @Html.PagedListPager(Model.PostsForCurrentpage, pageNumber => Url.Action(MVC.Forum.Topic().AddRouteValue("page", pageNumber)), pagerRenderOptions)
                        </div>
                    </div>

                    @if (Model.PostsForCurrentpage.IsLastPage)
                    {
                        Html.RenderPartial(MVC.Forum.Views.Reply, new ReplyViewModel { TopicId = Model.Id });

                        //sections are not supported in partials, so the js must be included here
                        @section scripts
                        {
                            @Scripts.Render("~/bundles/jqueryval")

                            <script>

                                $(function() {
                                    var editor = $('#reply-input').wysihtml5({
                                        toolbar: {
                                            "font-styles": false, //Font styling, e.g. h1, h2, etc. Default true
                                            "emphasis": true, //Italics, bold, etc. Default true
                                            "lists": true, //(Un)ordered lists, e.g. Bullets, Numbers. Default true
                                            "html": false, //Button which allows you to edit the generated HTML. Default false
                                            "link": true, //Button to insert a link. Default true
                                            "image": true, //Button to insert an image. Default true,
                                            "color": false, //Button to change color of font
                                            "blockquote": true, //Blockquote
                                            "size": "sm" //default: none, other options are xs, sm, lg
                                        }
                                    });

                                    $('#reply > form').submit(function() {
                                        $('#reply #Text').val(editor.html());
                                    });

                                    $(".approval-button").click(function() {
                                        var $postLink = $(this);
                                        var url = $postLink.data("url");
                                        var topicId = $postLink.data("topic-id");
                                        var postIndex = $postLink.data("post-index");

                                        $.post(url, { topicId: topicId, postIndex: postIndex })
                                            .done(function(data) {

                                                $postLink.parents(".post").find(".approval-button-container").hide();
                                                $postLink.parents(".post").find(".approvals").append("<div class='pull-left label label-info'>@User.Identity.GetUserName() @Resources.Approval.ApprovalText</div>");
                                            });
                                    });

                                    @if (this.Model.IsLastPage)
                                    {
                                        @:$.post("@Url.Action(MVC.Forum.MarkTopicAsRead())", { id: "@Model.Id" });
                                    }
                                    

                                    $('#poll form').submit(function(e) {

                                        e.preventDefault();
                                        e.returnValue = false;

                                        var $form = $(this);

                                        if ($form.valid()) {
                                            var $submitButton = $form.find('input[type="submit"]');

                                            $submitButton.prop("disabled", true);

                                            $.ajax({
                                                url: this.action,
                                                type: this.method,
                                                data: $form.serialize(),
                                                traditional: true,
                                                success: function(result) {
                                                    $('#poll-success').removeClass("hidden");
                                                    $('#poll-error').addClass("hidden");
                                                },
                                                error: function() {
                                                    $('#poll-success').addClass("hidden");
                                                    $('#poll-error').removeClass("hidden");
                                                },
                                                complete: function() {
                                                    $submitButton.prop("disabled", false);
                                                }
                                            });
                                        }

                                        return false;
                                    });
                                });


                            </script>
                        }
                    }
